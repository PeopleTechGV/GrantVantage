//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="RChilliParserSoap11Binding", Namespace="http://RchilliResumeParser")]
public partial class RChilliParser : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback parseResumeBinaryWithCountryOperationCompleted;
    
    private System.Threading.SendOrPostCallback ParseResumeWithCountryOperationCompleted;
    
    private System.Threading.SendOrPostCallback parseResumeOperationCompleted;
    
    private System.Threading.SendOrPostCallback parseResumeBinaryOperationCompleted;
    
    private System.Threading.SendOrPostCallback buildReleaseOperationCompleted;
    
    /// <remarks/>
    public RChilliParser()
    {
        this.Url = "http://java.rchilli.com/RChilliParser/services/RChilliParser.RChilliParserHttpSoap11Endpoint/";
    }
    
    /// <remarks/>
    public event parseResumeBinaryWithCountryCompletedEventHandler parseResumeBinaryWithCountryCompleted;
    
    /// <remarks/>
    public event ParseResumeWithCountryCompletedEventHandler ParseResumeWithCountryCompleted;
    
    /// <remarks/>
    public event parseResumeCompletedEventHandler parseResumeCompleted;
    
    /// <remarks/>
    public event parseResumeBinaryCompletedEventHandler parseResumeBinaryCompleted;
    
    /// <remarks/>
    public event buildReleaseCompletedEventHandler buildReleaseCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:parseResumeBinaryWithCountry", RequestNamespace="http://RchilliResumeParser", ResponseNamespace="http://RchilliResumeParser", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
    public string parseResumeBinaryWithCountry([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filedata, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fileName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string version, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountryKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string subUserId) {
        object[] results = this.Invoke("parseResumeBinaryWithCountry", new object[] {
                    filedata,
                    fileName,
                    userkey,
                    version,
                    CountryKey,
                    subUserId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginparseResumeBinaryWithCountry(string filedata, string fileName, string userkey, string version, string CountryKey, string subUserId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("parseResumeBinaryWithCountry", new object[] {
                    filedata,
                    fileName,
                    userkey,
                    version,
                    CountryKey,
                    subUserId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndparseResumeBinaryWithCountry(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void parseResumeBinaryWithCountryAsync(string filedata, string fileName, string userkey, string version, string CountryKey, string subUserId) {
        this.parseResumeBinaryWithCountryAsync(filedata, fileName, userkey, version, CountryKey, subUserId, null);
    }
    
    /// <remarks/>
    public void parseResumeBinaryWithCountryAsync(string filedata, string fileName, string userkey, string version, string CountryKey, string subUserId, object userState) {
        if ((this.parseResumeBinaryWithCountryOperationCompleted == null)) {
            this.parseResumeBinaryWithCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnparseResumeBinaryWithCountryOperationCompleted);
        }
        this.InvokeAsync("parseResumeBinaryWithCountry", new object[] {
                    filedata,
                    fileName,
                    userkey,
                    version,
                    CountryKey,
                    subUserId}, this.parseResumeBinaryWithCountryOperationCompleted, userState);
    }
    
    private void OnparseResumeBinaryWithCountryOperationCompleted(object arg) {
        if ((this.parseResumeBinaryWithCountryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.parseResumeBinaryWithCountryCompleted(this, new parseResumeBinaryWithCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:ParseResumeWithCountry", RequestNamespace="http://RchilliResumeParser", ResponseNamespace="http://RchilliResumeParser", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
    public string ParseResumeWithCountry([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string url, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string version, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string CountryKey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string subUserId) {
        object[] results = this.Invoke("ParseResumeWithCountry", new object[] {
                    url,
                    userkey,
                    version,
                    CountryKey,
                    subUserId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginParseResumeWithCountry(string url, string userkey, string version, string CountryKey, string subUserId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("ParseResumeWithCountry", new object[] {
                    url,
                    userkey,
                    version,
                    CountryKey,
                    subUserId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndParseResumeWithCountry(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void ParseResumeWithCountryAsync(string url, string userkey, string version, string CountryKey, string subUserId) {
        this.ParseResumeWithCountryAsync(url, userkey, version, CountryKey, subUserId, null);
    }
    
    /// <remarks/>
    public void ParseResumeWithCountryAsync(string url, string userkey, string version, string CountryKey, string subUserId, object userState) {
        if ((this.ParseResumeWithCountryOperationCompleted == null)) {
            this.ParseResumeWithCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnParseResumeWithCountryOperationCompleted);
        }
        this.InvokeAsync("ParseResumeWithCountry", new object[] {
                    url,
                    userkey,
                    version,
                    CountryKey,
                    subUserId}, this.ParseResumeWithCountryOperationCompleted, userState);
    }
    
    private void OnParseResumeWithCountryOperationCompleted(object arg) {
        if ((this.ParseResumeWithCountryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.ParseResumeWithCountryCompleted(this, new ParseResumeWithCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:parseResume", RequestNamespace="http://RchilliResumeParser", ResponseNamespace="http://RchilliResumeParser", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
    public string parseResume([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string url, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string version, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string subUserId) {
        object[] results = this.Invoke("parseResume", new object[] {
                    url,
                    userkey,
                    version,
                    subUserId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginparseResume(string url, string userkey, string version, string subUserId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("parseResume", new object[] {
                    url,
                    userkey,
                    version,
                    subUserId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndparseResume(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void parseResumeAsync(string url, string userkey, string version, string subUserId) {
        this.parseResumeAsync(url, userkey, version, subUserId, null);
    }
    
    /// <remarks/>
    public void parseResumeAsync(string url, string userkey, string version, string subUserId, object userState) {
        if ((this.parseResumeOperationCompleted == null)) {
            this.parseResumeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnparseResumeOperationCompleted);
        }
        this.InvokeAsync("parseResume", new object[] {
                    url,
                    userkey,
                    version,
                    subUserId}, this.parseResumeOperationCompleted, userState);
    }
    
    private void OnparseResumeOperationCompleted(object arg) {
        if ((this.parseResumeCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.parseResumeCompleted(this, new parseResumeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:parseResumeBinary", RequestNamespace="http://RchilliResumeParser", ResponseNamespace="http://RchilliResumeParser", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
    public string parseResumeBinary([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string filedata, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fileName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userkey, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string version, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string subUserId) {
        object[] results = this.Invoke("parseResumeBinary", new object[] {
                    filedata,
                    fileName,
                    userkey,
                    version,
                    subUserId});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginparseResumeBinary(string filedata, string fileName, string userkey, string version, string subUserId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("parseResumeBinary", new object[] {
                    filedata,
                    fileName,
                    userkey,
                    version,
                    subUserId}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndparseResumeBinary(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void parseResumeBinaryAsync(string filedata, string fileName, string userkey, string version, string subUserId) {
        this.parseResumeBinaryAsync(filedata, fileName, userkey, version, subUserId, null);
    }
    
    /// <remarks/>
    public void parseResumeBinaryAsync(string filedata, string fileName, string userkey, string version, string subUserId, object userState) {
        if ((this.parseResumeBinaryOperationCompleted == null)) {
            this.parseResumeBinaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnparseResumeBinaryOperationCompleted);
        }
        this.InvokeAsync("parseResumeBinary", new object[] {
                    filedata,
                    fileName,
                    userkey,
                    version,
                    subUserId}, this.parseResumeBinaryOperationCompleted, userState);
    }
    
    private void OnparseResumeBinaryOperationCompleted(object arg) {
        if ((this.parseResumeBinaryCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.parseResumeBinaryCompleted(this, new parseResumeBinaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:buildRelease", RequestNamespace="http://RchilliResumeParser", ResponseNamespace="http://RchilliResumeParser", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
    public string buildRelease() {
        object[] results = this.Invoke("buildRelease", new object[0]);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginbuildRelease(System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("buildRelease", new object[0], callback, asyncState);
    }
    
    /// <remarks/>
    public string EndbuildRelease(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void buildReleaseAsync() {
        this.buildReleaseAsync(null);
    }
    
    /// <remarks/>
    public void buildReleaseAsync(object userState) {
        if ((this.buildReleaseOperationCompleted == null)) {
            this.buildReleaseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnbuildReleaseOperationCompleted);
        }
        this.InvokeAsync("buildRelease", new object[0], this.buildReleaseOperationCompleted, userState);
    }
    
    private void OnbuildReleaseOperationCompleted(object arg) {
        if ((this.buildReleaseCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.buildReleaseCompleted(this, new buildReleaseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void parseResumeBinaryWithCountryCompletedEventHandler(object sender, parseResumeBinaryWithCountryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class parseResumeBinaryWithCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal parseResumeBinaryWithCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void ParseResumeWithCountryCompletedEventHandler(object sender, ParseResumeWithCountryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class ParseResumeWithCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal ParseResumeWithCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void parseResumeCompletedEventHandler(object sender, parseResumeCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class parseResumeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal parseResumeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void parseResumeBinaryCompletedEventHandler(object sender, parseResumeBinaryCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class parseResumeBinaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal parseResumeBinaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void buildReleaseCompletedEventHandler(object sender, buildReleaseCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class buildReleaseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal buildReleaseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
