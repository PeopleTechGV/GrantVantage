@using BEClient = ATS.BusinessEntity
@model ATS.WebUi.Models.BreadScrumbModel<ATS.BusinessEntity.SRPEntity.DynamicSRP<BEClient.VacancyStatus>>
@{
    ViewBag.Title = "View";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.MenuDisplayName = "Status Reasons";
}

@section Navigation{
    @Html.Partial("_NavCompanySetup")
}
<div id="Messages" style="width: auto; float: left;position:inherit;margin-left:25px;">
</div>
@using (Html.BeginForm(Model.obj.ActionName, "VacancyStatus", FormMethod.Post, new { id = "frmVacancyStatus" }))
{
    @Html.Partial("Buttons/_ViewGearAdmin", Model.obj)
    @Html.ValidationSummary(true)
    @Html.HiddenFor(m => m.obj.obj.VacancyStatusId, new { Id = "VacancyStatusId" })
    @Html.HiddenFor(m => m.obj.obj.ClientId)
    <div class="form-default">
        <div class="form-group w50">
            @Html.LanguageLabelFor(m => m.obj.obj.VacancyStatusText, new { @class = "label" })
            @Html.TextBoxFor(m => m.obj.obj.VacancyStatusText, new { @class = "detail-input" })
        </div>
        @for (int i = 0; i < Model.obj.obj.VacancyStatusEntityLanguage.Count(); i++)
        {
            String languageame = ATS.WebUi.Common.CurrentSession.Instance.VerifiedClient.ClientLanguageList.Where(x => x.LanguageId.Equals(Model.obj.obj.VacancyStatusEntityLanguage[i].LanguageId)).First().objLanguage.LanguageName;
            <div class="form-group w50">
                @Html.Label(languageame, new { @class = "label" })
                @Html.HiddenFor(m => m.obj.obj.VacancyStatusEntityLanguage[i].LanguageId, new { @class = "detail-input" })
                @Html.TextBoxFor(m => m.obj.obj.VacancyStatusEntityLanguage[i].LocalName, new { @class = "detail-input" })
            </div>
        }
        <div class="form-group w50">
            @Html.LanguageLabelFor(m => m.obj.obj.Category, new { @class = "label" })
            @Html.DropDownListFor(m => m.obj.obj.Category, (SelectList)ViewBag.VacancyStatusCategory, new { @class = "detail-select" })
        </div>
    </div>
    <div id="ConfirmDiv">
    </div>
}

@if (ViewBag.IsError != null && ViewBag.IsError == true)
{
    <script>
        VacancyModel.DisplayErrorMeesage('#commonMessage', '@ViewBag.Message', '@ATS.WebUi.Common.Constants.JSCR_MSG_FADEOUT');
    </script>
}
@if (ViewBag.IsError != null && ViewBag.IsError == false)
{
    <script>
        VacancyModel.DisplaySuccessMeesage('#commonMessage', '@ViewBag.Message', '@ATS.WebUi.Common.Constants.JSCR_MSG_FADEOUT');
    </script>
}
<script>
    function OnClickValidate()
    {
        $('#frmVacancyStatus').submit();
    }
    $(".btn-remove-vacancy").live("click", function () {
        
        var VacancyCount =""
        if(@Model.obj.obj.RecordExistsCount.Count > 0)
            VacancyCount = @Model.obj.obj.RecordExistsCount.Where(x => x.TableName == "Vacancy").Select(x => x.Count).FirstOrDefault()
            VacancyModel.ConfirmDialog("ConfirmDiv", "Delete Opportunity status", 320, "Are you sure want to delete this Opportunity Status ? <br /> The following records will also be deleted:<br />" + VacancyCount +" Opportunities", "Yes", "Cancel", "Delete", this, "test");
        return false;
    });
    function Delete(Result, element, RemoveDivName) {
        if (Result == true) {
            var deletelink = '@Url.Action("Delete", "VacancyStatus", new { id = @Model.obj.obj.VacancyStatusId })'
            window.location.href = deletelink;
        }
    }
</script>