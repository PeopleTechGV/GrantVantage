@model ATS.WebUi.Areas.Employee.Models.InterviewProcessQueModel
@using BERoundAttr = ATS.BusinessEntity.RndAttrNo
@using BEQueType = ATS.BusinessEntity.QuestionType
@using HtmlHelpers.BeginCollectionItem

@{
    BEQueType QueType = (BEQueType)(Convert.ToInt32(Model.ObjInterviewProcessQue.ObjQue.QueType));
    var AnswerLable = "Applicant's Answer";
    var HideCommentBox = false;
    if (QueType == BEQueType.QT_RATE && (Model.ObjInterviewProcessQue.ObjQue.QueDataType == 3 || Model.ObjInterviewProcessQue.ObjQue.QueDataType == 4))
    {
        AnswerLable = "Reviewers's Answer";
        HideCommentBox = true;
    }
}


@if (Model.ObjInterviewProcessQue.ObjQue.QueId != Guid.Empty)
{
    @Html.HiddenFor(m => m.ObjInterviewProcessQue.VacQueId, new { @id = "hdnVacQueId" })

    <div class="vacancy-quest-box" data-pkid="@Model.ObjInterviewProcessQue.ObjQue.QueId" data-querow='@Model.ObjInterviewProcessQue.TotalQue'>
        <div class="std_width question-head">
            <span class="red">Question @Model.ObjInterviewProcessQue.CurrentQue :</span>
            @Model.ObjInterviewProcessQue.ObjQue.LocalName
        </div>
        <div class="std_width reviewer-textarea-bg">
            <div class="question-dtl-lbl">Question Type</div>
            <div class="question-dtl-value">@Model.ObjInterviewProcessQue.ObjQue.QueText (@Model.ObjInterviewProcessQue.ObjQue.QueDataTypeText)</div>

            <div class="QuestionAnswer">
                @using (Ajax.BeginForm("AddEditAnswer", "Application", new { area = ATS.WebUi.Common.Constants.AREA_EMPLOYEE }, new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            HttpMethod = "POST",
            OnSuccess = "AddEditAnswerSuccess",
            OnFailure = "AddEditAnswerFailure",
        }, new { id = "frmAddEditAnswer" }))
                {
                    <script>
                        var formAddEditAnswer = $("#frmAddEditAnswer");
                        $.validator.unobtrusive.parse(formAddEditAnswer);</script>
                    <div class="CreateQues">
                        @foreach (var _current in Model.Questions)
                        {
                            using (Html.BeginCollectionItem("Questions"))
                            {
                                <div class="question-dtl-lbl">@AnswerLable</div>
                                @Html.Partial("InterViewQuestions/_CreateQuestionInt", _current)
                                if (HideCommentBox == false)
                                {
                                    <div style="width: 100%; float: left; clear: both;">
                                        <div class="question-dtl-lbl">Comments</div>
                                        <div class="question-dtl-value">
                                            <div class="one-div-full reviewer-textarea">
                                                <div class="box">
                                                    @Html.TextAreaFor(x => _current.Comment, new { @class = "input-details IntSaveAnswer", rows = "4" })
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            }
                        }
                    </div>
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="vacancy-quest-box">no questions</div>
}

<script>
    function SaveAns(element) {

        var _scheduleintid = $(element).parents('.acc-inner:first').parent().prev().attr('data-pkid');
        $('#ScheduleInt').val(_scheduleintid);
        $('#frmAddEditAnswer').submit();
        return false;
    }
    function intcomp(e, element) {
        e.preventDefault();
        var result = VacancyModel.ValidateQuestionAnswer($('#frmAddEditAnswer'));

        if (!result) {
            $('#frmAddEditAnswer').submit();
            InterviewComplete(element);
        }
    }
    function InterviewComplete(element) {

        var self = $(element);
        var vacrndid = $(self).parents('.acc-Content:first').prev().attr('data-vacrndid');
        var scheduleintid = $(self).parents('.acc-Content:first').prev().attr('data-pkid');
        var IsComplete = true
        var dataLink = '@Html.Raw(Url.Action("UpdateInterViewStatus", "Application", new { VacRndId = "_VACRNDID_", ScheduleIntId = "_SCHEINTID_" ,IsComplete = "_ISCOMP_"}))';
        dataLink = dataLink.replace("_VACRNDID_", vacrndid);
        dataLink = dataLink.replace("_SCHEINTID_", scheduleintid);
        dataLink = dataLink.replace("_ISCOMP_", IsComplete);
        VacancyModel.CallPostMethod(dataLink, function (data) {
            $(self).parents('.acc-Content:first').prev().find('#rndscore').text($(data).find('#rndscore').text());
            //Need to change
            $(self).parents('.acc-Content:first').parent().parents('.CanInterview').parents('.acc-Content:first').prev().find('#rndscore').text($(data).find('#TotalScore').val());

            //            $(self).parents('.Interviews').parents('.acc-Content:first').next().find('#rndscore').text($(data).find('#TotalScore').val());
            $(self).parents('.CanInterview').children().first().find('p').find('.floatright').children('#rndscore').text($(data).find('#TotalScore').val());
            $(self).parents('.acc-inner:first').html('<div>' + data + '</div>');

        });
    }

    function AddEditAnswerSuccess(response) {
        response = JSON.parse(response);
        var _ele = $('#frmAddEditAnswer').parent();
        GetScore(_ele);
    }

</script>